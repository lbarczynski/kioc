plugins {
    id 'java-library'
    id 'kotlin'
    id 'maven-publish'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.amshove.kluent:kluent:1.65'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

publishing {
    publications {
        kiocCore(MavenPublication) {
            groupId 'com.bapps.kioc'
            artifactId 'core'
            version kioc_version
            artifact("$buildDir/libs/core.jar")
            pom {
                name = 'kIOC core'
                description = 'Lightweight Kotlin IOC container with DSL API. Inspired by Koin & Dagger2'
                url = 'https://github.com/lbarczynski/kioc'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'lbarczynski'
                        name = 'Lukasz Barczynski'
                        email = 'baripoland@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/lbarczynski/kioc.git'
                    developerConnection = 'scm:git:ssh://github.com/lbarczynski/kioc.git'
                    url = 'https://github.com/lbarczynski/kioc'
                }
            }
        }
    }
    repositories {
        maven {
            name 'github'
            url 'https://maven.pkg.github.com/lbarczynski/kioc'
            credentials {
                username project.hasProperty('repositories.github.username') ? project.property('repositories.github.username') : System.env.GITHUB_USER
                password project.hasProperty('repositories.github.password') ? project.property('repositories.github.password') : System.env.GITHUB_TOKEN
            }
        }
    }
}